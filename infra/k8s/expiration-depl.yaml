apiVersion: apps/v1
kind: Deployment
metadata:
  name: expiration-depl
spec:
  replicas: 1 #number of pods (copies of the image) to run for the auth service
  selector: #tell the deployment how to find the pods it will create
    matchLabels:
      app: expiration
  template: #how to create each individual pod that this deployment will create
    metadata:
      labels: #this label matches up with the "matchLabels" in the "selector"
        app: expiration
    spec: #tell pod how to behave
      containers:
        - name: expiration #important for logging purposes
          image: gcr.io/cool-snowfall-275901/expiration #gokcedilek/s-e-auth
          env: #setting up env variables we want to have access to in this container (can then use with process.env)
            - name: NATS_URL
              value: 'http://nats-srv:4222'
            - name: NATS_CLUSTER_ID
              value: social-events
            - name: NATS_CLIENT_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name #pod name provided as env var
            - name: REDIS_HOST #tell exp depl how to connect to redis
              value: expiration-redis-srv #hostname of the redis server we want to connect to

#we dont need a ClusterIP service for the expiration service because this service will not be contacted by any other service, or have any network request
#we just need the expiration pod (or deployment), which will communicate with the rest of our app ASYNCHRONOUSLY through nats streaming server!
